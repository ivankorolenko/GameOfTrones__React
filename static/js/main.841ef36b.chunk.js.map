{"version":3,"sources":["components/errorMessage/error.jpg","services/gotService.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/header/header.js","components/header/index.js","components/spinner/index.js","components/spinner/spinner.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/rowBlock.js","components/rowBlock/index.js","components/pages/characterPage/index.js","components/pages/characterPage/characterPage.js","components/pages/housePage/index.js","components/pages/housePage/housePage.js","components/pages/bookPage/bookPage.js","components/pages/bookPage/index.js","components/pages/booksItem/index.js","components/pages/booksItem/booksItem.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","page","map","_transformCharacter","getCharacter","id","character","getAllHouses","_transformHouse","getHouse","house","getAllBooks","_transformBook","getBook","book","char","name","gender","born","died","culture","slice","region","words","titles","ancestralWeapons","numberOfPages","publisher","released","Date","toDateString","this","ErrorMessage","src","img","alt","HeaderBlock","styled","div","HeaderTitle","h3","HeaderLinks","ul","Header","to","Spinner","className","RandomBlock","RandomTitle","h4","RandomTerm","span","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","timerId","setInterval","props","interval","clearInterval","errorMessage","spinner","content","Component","defaultProps","View","Item","li","ItemList","itemList","renderItem","onItemSelected","items","item","label","key","onClick","ItemDetailsBlock","ItemDetailsTitle","SelectError","AlignedSpan","Field","field","fieldList","value","ItemDetails","updateItem","prevProps","itemId","category","itemInfo","React","Children","children","child","cloneElement","Paginator","RowBlock","Row","Col","md","left","Button","color","prevPage","nextPage","right","characterPage","selectedChar","updateAllCharacters","console","charDetails","HousePage","selectedHouse","updateAllHouses","houseDetails","BookPage","updateAllBooks","history","push","withRouter","BooksItem","bookId","App","ToggleRandomChar","randomShown","randomChar","Container","lg","size","offset","path","component","CharacterPage","exact","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.841ef36b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.c9fa41e6.jpg\";","export default class GotService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(this._apiBase + url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Couldn't fetch ${this._apiBase + url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (page) => {\r\n        const res = await this.getResource(`/characters?page=${page}`);\r\n        return res.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const character = await this.getResource(`/characters/${id}`);\r\n        return this._transformCharacter(character);\r\n    }\r\n\r\n    getAllHouses = async (page) => {\r\n        const res = await this.getResource(`/houses?page=${page}`);\r\n        return res.map(this._transformHouse);\r\n    }\r\n\r\n    getHouse = async (id) => {\r\n        const house = await this.getResource(`/houses/${id}`);\r\n        return this._transformHouse(house);\r\n    }\r\n\r\n    getAllBooks = async () => {\r\n        const res = await this.getResource('/books?pageSize=12');\r\n        return res.map(this._transformBook);\r\n    }\r\n\r\n    getBook = async (id) => {\r\n        const book = await this.getResource(`/books/${id}`);\r\n        return this._transformBook(book);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name || 'no data :(',\r\n            gender: char.gender || 'no data :(',\r\n            born: char.born || 'no data :(',\r\n            died: char.died || 'no data :(',\r\n            culture: char.culture || 'no data :(',\r\n            id: char.url.slice(49)\r\n        }\r\n    }\r\n\r\n    _transformHouse = (house) => {\r\n        return {\r\n            name: house.name || 'no data :(',\r\n            region: house.region || 'no data :(',\r\n            words: house.words || 'no data :(',\r\n            titles: house.titles || 'no data :(',\r\n            ancestralWeapons: house.ancestralWeapons || 'no data :(',\r\n            id: house.url.slice(45)\r\n        }\r\n    }\r\n\r\n    _transformBook = (book) => {\r\n        return {\r\n            name: book.name || 'no data :(',\r\n            numberOfPages: book.numberOfPages || 'no data :(',\r\n            publisher: book.publisher || 'no data :(',\r\n            released: new Date(book.released).toDateString() || 'no data :(',\r\n            id: book.url.slice(44)\r\n        }\r\n    }\r\n}","import ErrorMessage from './errorMessage';\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt=\"error\"/>\r\n            <span>Something goes wrong</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.h3`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <Link to=\"/\">\r\n                Game of Thrones DB\r\n                </Link>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <Link to=\"/characters/\">Characters</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/houses/\">Houses</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/books/\">Books</Link>   \r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from './header';\r\n\r\nexport default Header;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-pj4uds2n46\">\r\n            <div className=\"ldio-6k5pj8d2wzk\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport GotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nconst RandomBlock = styled.div`\r\n    background-color: #fff;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst RandomTitle = styled.h4`\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst RandomTerm = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default class RandomChar extends Component {\r\n    gotService = new GotService();\r\n    \r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    static defaultProps = {\r\n        interval: 1500\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        this.timerId = setInterval(this.updateChar, this.props.interval);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * 140 + 25);\r\n\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null,\r\n              spinner = loading ? <Spinner/> : null,\r\n              content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <RandomBlock className=\"random-block rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </RandomBlock>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, gender, born, died, culture} = char;\r\n\r\n    return (\r\n        <>\r\n            <RandomTitle>Random Character: {name}</RandomTitle>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <RandomTerm>Gender </RandomTerm>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <RandomTerm>Born </RandomTerm>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <RandomTerm>Died </RandomTerm>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <RandomTerm>Culture </RandomTerm>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n};","import RandomChar from './randomChar';\r\n\r\nexport default RandomChar;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Spinner from '../spinner';\r\n\r\nconst Item = styled.li`\r\n    cursor: pointer;\r\n`;\r\n\r\nfunction ItemList({itemList, renderItem, onItemSelected}) {\r\n    function renderItems(arr) {\r\n        return arr.map((item) => {\r\n            const {id} = item,\r\n                  label = renderItem(item);\r\n            \r\n            return (\r\n                <Item \r\n                    key={id}\r\n                    className=\"list-group-item\"\r\n                    onClick={() => {\r\n                        onItemSelected(id);\r\n                    }}>\r\n                    {label}\r\n                </Item>\r\n            )\r\n        });\r\n    }\r\n\r\n    if (!itemList) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    const items = renderItems(itemList);\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"item-list list-group\">\r\n                {items}\r\n            </ul>\r\n            <br/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import ItemList from './itemList';\r\n\r\nexport default ItemList;","import React, {Component, Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport GotService from '../../services/gotService';\r\n\r\n\r\nconst ItemDetailsBlock = styled.div`\r\n    background-color: #fff;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst ItemDetailsTitle = styled.h4`\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst SelectError = styled.span`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst AlignedSpan = styled.span`\r\n    text-align: right;\r\n    float: right;\r\n`;\r\n\r\nconst Field = ({item, field, label}) => {\r\n    if (typeof item[field] === 'object') {\r\n\r\n        const fieldList = item[field].map(value => {\r\n            return (\r\n                <Fragment key={value}>\r\n                    <AlignedSpan>\r\n                        {value}\r\n                    </AlignedSpan>\r\n                    <br/>\r\n                </Fragment>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"term\">{label}</span>\r\n                <span>{fieldList}</span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n            <span className=\"term\">{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default class ItemDetails extends Component {\r\n    gotService = new GotService();\r\n\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    updateItem() { \r\n        const {category, itemId} = this.props;\r\n\r\n        if (!itemId) {\r\n            return\r\n        }\r\n\r\n        let itemInfo;\r\n\r\n        switch (category) {\r\n            case ('character'):\r\n                itemInfo = this.gotService.getCharacter(itemId);\r\n                break;\r\n            case ('house'):\r\n                itemInfo = this.gotService.getHouse(itemId);\r\n                break;\r\n            case ('book'):\r\n                itemInfo = this.gotService.getBook(itemId);\r\n                break;\r\n            default:\r\n                itemInfo = null\r\n        }\r\n\r\n        itemInfo.then((item) => {\r\n            this.setState({item});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.item) {\r\n            return <SelectError>Please select a {this.props.category}</SelectError>\r\n        }\r\n\r\n        const {item} = this.state,\r\n              {name} = item;\r\n\r\n        return (\r\n            <ItemDetailsBlock className=\"rounded\">\r\n                <ItemDetailsTitle>{name}</ItemDetailsTitle>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        React.Children.map(this.props.children, (child) => {\r\n                            return React.cloneElement(child, {item})\r\n                        })\r\n                    }\r\n                </ul>\r\n            </ItemDetailsBlock>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Field};","import ItemDetails, {Field} from './itemDetails';\r\n\r\nexport default ItemDetails;\r\nexport {Field}","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Col, Row, Button} from 'reactstrap';\r\n\r\nconst Paginator = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport default class RowBlock extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md='6'>\r\n                    {this.props.left}\r\n                    <Paginator>\r\n                        <Button \r\n                            color=\"primary\"\r\n                            onClick={this.props.prevPage}>\r\n                            Previouse page\r\n                        </Button>\r\n                        <Button \r\n                            color=\"primary\"\r\n                            onClick={this.props.nextPage}>\r\n                            Next page\r\n                        </Button>\r\n                    </Paginator>\r\n                    <br/>\r\n                </Col>\r\n                <Col md='6'>\r\n                    {this.props.right}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }   \r\n}\r\n","import RowBlock from './rowBlock';\r\n\r\nexport default RowBlock;","import characterPage from './characterPage';\r\n\r\nexport default characterPage;","import React, {Component} from 'react';\r\nimport ItemList from '../../itemList';\r\nimport ItemDetails, {Field} from '../../itemDetails';\r\nimport ErrorMessage from '../../errorMessage';\r\nimport GotService from '../../../services/gotService';\r\nimport RowBlock from '../../rowBlock';\r\n\r\nexport default class CharacterPage extends Component {\r\n    gotService = new GotService();\r\n    \r\n    state = {\r\n        selectedChar: null,\r\n        error: false,\r\n        page: 130,\r\n        itemList: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateAllCharacters()\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    updateAllCharacters() {\r\n        this.gotService.getAllCharacters(this.state.page)\r\n            .then(itemList => {\r\n                this.setState({ itemList })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        });\r\n    }\r\n\r\n    nextPage = () => {\r\n        if (this.state.page < 214) {\r\n            this.setState({\r\n                page: this.state.page + 1\r\n            }, this.updateAllCharacters);\r\n        }\r\n    }\r\n\r\n    prevPage = () => {\r\n        if (this.state.page > 1) {\r\n            this.setState({\r\n                page: this.state.page - 1\r\n            }, this.updateAllCharacters);\r\n        }       \r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                itemList={this.state.itemList}\r\n                renderItem={({name, gender}) => `${name} (${gender})`}\r\n                onItemSelected={this.onItemSelected}/>\r\n        );\r\n\r\n        const charDetails = (\r\n            <ItemDetails \r\n            category=\"character\"\r\n            itemId={this.state.selectedChar}>\r\n                <Field key='1' field=\"gender\" label=\"Gender\" />\r\n                <Field key='2' field=\"born\" label=\"Born\" />\r\n                <Field key='3' field=\"died\" label=\"Died\" />\r\n                <Field key='4' field=\"culture\" label=\"Culture\" />\r\n            </ItemDetails>\r\n        );\r\n\r\n        return (\r\n            <RowBlock \r\n                nextPage={this.nextPage} \r\n                prevPage={this.prevPage} \r\n                left={itemList} \r\n                right={charDetails} />\r\n        )\r\n    }\r\n}\r\n\r\n","import HousePage from './housePage';\r\n\r\nexport default HousePage;","import React, {Component} from 'react';\r\nimport ItemList from '../../itemList';\r\nimport ItemDetails, {Field} from '../../itemDetails';\r\nimport ErrorMessage from '../../errorMessage';\r\nimport GotService from '../../../services/gotService';\r\nimport RowBlock from '../../rowBlock';\r\n\r\nexport default class HousePage extends Component {\r\n    gotService = new GotService();\r\n    \r\n    state = {\r\n        selectedHouse: null,\r\n        error: false,\r\n        page: 10,\r\n        itemList: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateAllHouses()\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    updateAllHouses() {\r\n        this.gotService.getAllHouses(this.state.page)\r\n            .then(itemList => {\r\n                this.setState({ itemList })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id\r\n        });\r\n    }\r\n\r\n    nextPage = () => {\r\n        if (this.state.page < 45) {\r\n            this.setState({\r\n                page: this.state.page + 1\r\n            }, this.updateAllHouses);\r\n        }\r\n    }\r\n\r\n    prevPage = () => {\r\n        if (this.state.page > 1) {\r\n            this.setState({\r\n                page: this.state.page - 1\r\n            }, this.updateAllHouses);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                itemList={this.state.itemList}\r\n                renderItem={({name}) => name}\r\n                onItemSelected={this.onItemSelected}/>\r\n        );\r\n\r\n        const houseDetails = (\r\n            <ItemDetails \r\n            category=\"house\"\r\n            itemId={this.state.selectedHouse}>\r\n                <Field key='1' field=\"region\" label=\"Region\" />\r\n                <Field key='2' field=\"words\" label=\"Words\" />\r\n                <Field key='3' field=\"titles\" label=\"Titles\" />\r\n                <Field key='4' field=\"ancestralWeapons\" label=\"Ancestral Weapons\" />\r\n            </ItemDetails>\r\n        );\r\n\r\n        return (\r\n            <RowBlock\r\n                nextPage={this.nextPage} \r\n                prevPage={this.prevPage} \r\n                left={itemList} \r\n                right={houseDetails} />\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport ItemList from '../../itemList';\r\nimport ErrorMessage from '../../errorMessage';\r\nimport GotService from '../../../services/gotService';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass BookPage extends Component {\r\n    gotService = new GotService();\r\n\r\n    state = {\r\n        error: false,\r\n        itemList: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.updateAllBooks()\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    updateAllBooks() {\r\n        this.gotService.getAllBooks()\r\n            .then(itemList => {\r\n                this.setState({ itemList })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return (\r\n            <ItemList\r\n                itemList={this.state.itemList}\r\n                renderItem={({name}) => name}\r\n                onItemSelected={(itemId) => {\r\n                    this.props.history.push(itemId);\r\n                }}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BookPage);\r\n","import BookPage from './bookPage';\r\n\r\nexport default BookPage;","import BooksItem from './booksItem';\r\n\r\nexport default BooksItem;","import React, {Component} from 'react';\r\nimport GotService from '../../../services/gotService';\r\nimport ItemDetails, {Field} from '../../itemDetails';\r\n\r\nexport default class BooksItem extends Component {\r\n    gotService = new GotService();\r\n\r\n    render() {\r\n        return (\r\n            <ItemDetails \r\n            category=\"book\"\r\n            itemId={this.props.bookId}>\r\n                <Field key='1' field=\"publisher\" label=\"Publisher\" />\r\n                <Field key='2' field=\"numberOfPages\" label=\"Number of pages\" />\r\n                <Field key='3' field=\"released\" label=\"Released\" />\r\n            </ItemDetails>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport {Col, Row, Container, Button} from 'reactstrap';\r\nimport GotService from '../../services/gotService';\r\nimport ErrorMessage from '../errorMessage';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport CharacterPage from '../pages/characterPage';\r\nimport HousePage from '../pages/housePage';\r\nimport BookPage from '../pages/bookPage';\r\nimport BooksItem from '../pages/booksItem';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.gotService = new GotService();\r\n\r\n        this.state = {\r\n            randomShown: true,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    ToggleRandomChar = () => {\r\n        this.setState({\r\n            randomShown: !this.state.randomShown\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {randomShown, error} = this.state,\r\n              randomChar = randomShown ? <RandomChar interval={1500} /> : null;\r\n        \r\n        if (error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return (\r\n            <Router>\r\n                <div className=\"app\"> \r\n                    <Container>\r\n                        <Header />\r\n                    </Container>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col lg={{size: 5, offset: 0}}>\r\n                                {randomChar}\r\n                                <Button \r\n                                    color=\"primary\"\r\n                                    onClick={this.ToggleRandomChar}>\r\n                                    Toggle random character\r\n                                </Button><br/><br/><br/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Route path=\"/characters\" component={CharacterPage} />\r\n                        <Route path=\"/houses\" component={HousePage} />\r\n                        <Route path=\"/books\" exact component={BookPage} />\r\n                        <Route path=\"/books/:id\" render={\r\n                            ({match}) => {\r\n                                const {id} = match.params;\r\n\r\n                                return <BooksItem bookId={id} />\r\n                            }\r\n                        } />\r\n                    </Container>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}